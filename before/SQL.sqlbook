-- SQLBook: Code
2.24
SELECT SKU, SKU_DEscription
FROM INVENTORY
WHERE QuantityOnHand = 0;

-- SQLBook: Code
2.25
SELECT SKU, SKU_Description, WarehouseID
FROM INVENTORY
WHERE QuantityOnHand = 0
ORDER BY WarehouseID ASC;
-- SQLBook: Code
2.26
SELECT SKU, SKU_Description, WarehouseID
FROM INVENTORY
WHERE QuantityOnHand > 0
ORDER BY WarehouseID DESC , SKU ASC;
-- SQLBook: Code
2.27
SELECT SKU, SKU_Description, WarehouseID
FROM INVENTORY
WHERE QuantityOnHand = 0 AND QuantityOnOrder > 0
ORDER BY WarehouseID DESC , SKU ASC;
-- SQLBook: Code
2.28
SELECT SKU, SKU_Description, WarehouseID
FROM INVENTORY
WHERE QuantityOnHand = 0 OR QuantityOnOrder = 0
ORDER BY WarehouseID DESC , SKU ASC;

-- SQLBook: Code
2.29
SELECT SKU, SKU_Description, WarehouseID, QuantityOnHand
FROM INVENTORY
WHERE WHEREQuantityOnHand > 1 AND QuantityOnHand < 10;

-- SQLBook: Code
2.30
SELECT SKU, SKU_Description, WarehouseID, QuantityOnHand
FROM INVENTORY
WHERE WHEREQuantityOnHand BETWEEN 2 AND 9;
-- SQLBook: Code
2.31
SELECT SKU, SKU_Description
FROM INVENTORY
WHERE SKU_Description LIKE "Half-Dome%"
-- SQLBook: Code
2.32
SELECT SKU, SKU_Description
FROM INVENTORY
WHERE SKU_Description LIKE "%Climb%"
-- SQLBook: Code
2.33
SELECT SKU, SKU_Description
FROM INVENTORY
WHERE SKU_Description LIKE "__d%"
-- SQLBook: Code
2.34
SELECT SUM(QuantityOnHand) AS QuantityOnHandSum,
AVG(QuantityOnHand) AS QuantityOnHandAvg,
MIN(QuantityOnHand) AS QuantityOnHandMin,
MAX(QuantityOnHand) AS QuantityOnHandMax,
COUNT(QuantityOnHand) AS QuantityOnHandCount
FROM INVENTORY;
-- SQLBook: Code
2.35
COUNT는 해당 데이터의 개수를 세는 것이고,
SUM은 데이터의 값을 모두 더해주는 것입니다.
-- SQLBook: Code
2.36
SELECT WarehouseID,SUM(QuantityOnHand) as TotalItemsOnHand
FROM INVENTORY
ORDER BY TotalItemsOnHand DESC
GROUP BY WarehouseID; 
-- SQLBook: Code
2.37
SELECT WarehouseID, SUM(QuantityOnHand) as TotalItemsOnHandLT3
FROM INVENTORY
WHERE QuantityOnHand < 3
GROUP BY WarehouseID
ORDER BY TotalItemsOnHandLT3 DESC;

-- SQLBook: Code
2.38
SELECT WarehouseID, SUM(QuantityOnHand) as TotalItemsOnHandLT3
FROM INVENTORY
WHERE QuantityOnHand < 3
GROUP BY WarehouseID
ORDER BY TotalItemsOnHandLT3 DESC
HAVING Count(*) < 2;
-- SQLBook: Code
2.39
WHERE
WHERE절은 행단위의 조건으로 일차적으로 거른 후, 
걸러진 행들에 대해서  GROUP BY절을 통한 그룹에 추가적으로 조건을 부여하는 것이기 때문에 HAVING절보다 WHERE절을 먼저 적용해야 한다.

-- SQLBook: Code
2.45
SELECT SKU, SKU_Description, WarehouseID
FROM INVENTORY
WHERE WarehouseID = (SELECT WarehouseID
                        FROM WAREHOUSE
                        WHERE Manager = "Lucile Smith");
-- SQLBook: Code
2.46
SELECT SKU, SKU_Description, INVENTORY.WarehouseID
FROM INVENTORY,WAREHOUSE
WHERE INVENTORY.WarehouseID = WAREHOUSE.WarehouseID
AND Manager = "Lucile Smith";
-- SQLBook: Code
2.47
SELECT SKU, SKU_Description, INVENTORY.WarehouseID
FROM INVENTORY JOIN WAREHOUSE
ON INVENTORY.WarehouseID = WAREHOUSE.WarehouseID
WHERE Manager = "Lucile Smith";

-- SQLBook: Code
2.48
SELECT WarehouseID,AVG(QuantityOnHand)
FROM INVENTORY
WHERE WarehouseID = (SELECT WarehouseID
                        FROM WAREHOUSE
                        WHERE Manager = "Lucile Smith")
GROUP BY WarehouseID;

-- SQLBook: Code
2.49
SELECT WAREHOUSE.WarehouseID,AVG(QuantityOnHand)
FROM INVENTORY,WAREHOUSE
WHERE INVENTORY.WarehouseID = WAREHOUSE.WarehouseID
AND Manager = "Lucile Smith"
GROUP BY WAREHOUSE.WarehouseID;
-- SQLBook: Code
2.50
SELECT INVENTORY.WarehouseID,AVG(QuantityOnHand)
FROM INVENTORY JOIN WAREHOUSE
ON INVENTORY.WarehouseID = WAREHOUSE.WarehouseID
WHERE Manager = "Lucile Smith"
GROUP BY WarehouseID;
-- SQLBook: Code
2.51
SELECT INVENTORY.WarehouseID,WarehouseCity,WarehouseState,Manager,
        SKU,SKU_Description,QuantityOnOrder
FROM INVENTORY JOIN WAREHOUSE
ON INVENTORY.WarehouseID = WAREHOUSE.WarehouseID
WHERE Manager = "Lucile Smith"
-- SQLBook: Code
2.52
SELECT WarehouseID, SUM(QuantityOnOrder) as TotalItemsOnOrder,
        SUM(QuantityOnHand) as TotalItemsOnHand
FROM INVENTORY
GROUP BY WarehouseID , QuantityOnOrder